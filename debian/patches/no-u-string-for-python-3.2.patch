Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 python-pbr (0.8.0-1) experimental; urgency=low
 .
   * New upstream release.
Author: Thomas Goirand <zigo@debian.org>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- python-pbr-0.8.0.orig/pbr/tests/test_setup.py
+++ python-pbr-0.8.0/pbr/tests/test_setup.py
@@ -21,6 +21,7 @@ from __future__ import print_function
 import os
 import sys
 import tempfile
+import six
 
 try:
     import cStringIO as io
@@ -145,10 +146,10 @@ class GitLogsTest(base.BaseTestCase):
             self.assertNotIn('Merge "', changelog_contents)
 
     def test_generate_authors(self):
-        author_old = u"Foo Foo <email@foo.com>"
-        author_new = u"Bar Bar <email@bar.com>"
-        co_author = u"Foo Bar <foo@bar.com>"
-        co_author_by = u"Co-authored-by: " + co_author
+        author_old = six.u("Foo Foo <email@foo.com>")
+        author_new = six.u("Bar Bar <email@bar.com>")
+        co_author = six.u("Foo Bar <foo@bar.com>")
+        co_author_by = six.u("Co-authored-by: ") + co_author
 
         git_log_cmd = (
             "git --git-dir=%s log --use-mailmap --format=%%aN <%%aE>"
